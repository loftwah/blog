[
    {
      "id": "aws-net-6",
      "question": "When using a VPC with private subnets, which component is responsible for allowing private instances to receive responses from the internet?",
      "options": [
        "Internet Gateway",
        "NAT Gateway maintains a connection state table for response traffic",
        "Security Groups",
        "Network ACLs"
      ],
      "answer": 1,
      "image": "aws1.jpg",
      "explanation": {
        "text": "NAT Gateway maintains a state table of outbound connections, allowing response traffic back to private instances while still preventing inbound connections. This is why private instances can receive responses to their requests but can't be directly accessed from the internet.",
        "codeExample": {
          "code": "# Private subnet route table\nroute {\n  cidr_block = \"0.0.0.0/0\"\n  nat_gateway_id = aws_nat_gateway.main.id\n}",
          "language": "hcl"
        }
      },
      "tags": ["vpc", "nat", "routing"],
      "difficulty": "hard",
      "category": "networking"
    },
    {
      "id": "aws-net-7",
      "question": "Which statement about VPC route tables is correct?",
      "options": [
        "A subnet can be associated with multiple route tables",
        "A route table can be associated with multiple subnets",
        "Route tables must be manually created for every subnet",
        "Private subnets cannot have route tables"
      ],
      "answer": 1,
      "image": "aws2.jpg",
      "explanation": {
        "text": "A single route table can be associated with multiple subnets, but a subnet can only be associated with one route table at a time. This allows for efficient management of routing rules across multiple subnets that share the same routing needs.",
        "codeExample": {
          "code": "# One route table, multiple subnet associations\nresource \"aws_route_table_association\" \"private_subnets\" {\n  count = length(var.private_subnet_ids)\n  subnet_id = var.private_subnet_ids[count.index]\n  route_table_id = aws_route_table.private.id\n}",
          "language": "hcl"
        }
      },
      "tags": ["vpc", "routing", "subnets"],
      "difficulty": "medium",
      "category": "networking"
    },
    {
      "id": "aws-net-8",
      "question": "When should you use an Elastic IP address in your VPC architecture?",
      "options": [
        "For all EC2 instances",
        "Only for instances in private subnets",
        "For NAT Gateways and instances that need a fixed public IP",
        "Only for load balancers"
      ],
      "answer": 2,
      "image": "aws3.jpg",
      "explanation": {
        "text": "Elastic IPs are primarily used when you need a fixed public IP address, most commonly for NAT Gateways and public-facing instances that require a consistent endpoint. They incur charges when not associated with a running instance, so use them sparingly.",
        "codeExample": {
          "code": "# Elastic IP for NAT Gateway\nresource \"aws_eip\" \"nat\" {\n  domain = \"vpc\"\n  depends_on = [aws_internet_gateway.main]\n}",
          "language": "hcl"
        }
      },
      "tags": ["vpc", "eip", "nat"],
      "difficulty": "medium",
      "category": "networking"
    },
    {
      "id": "aws-net-9",
      "question": "What is the difference between Security Groups and Network ACLs in a VPC?",
      "options": [
        "Security Groups are instance-level, stateful; NACLs are subnet-level, stateless",
        "Security Groups are subnet-level, stateless; NACLs are instance-level, stateful",
        "They are the same thing with different names",
        "Security Groups are for private subnets only; NACLs are for public subnets"
      ],
      "answer": 0,
      "image": "cloud.jpg",
      "explanation": {
        "text": "Security Groups operate at the instance level and are stateful (return traffic is automatically allowed). Network ACLs operate at the subnet level and are stateless (you must explicitly allow both inbound and outbound traffic). Security Groups only support allow rules, while NACLs support both allow and deny rules.",
        "codeExample": {
          "code": "# Security Group (stateful)\nresource \"aws_security_group\" \"example\" {\n  ingress {\n    from_port = 80\n    to_port = 80\n    protocol = \"tcp\"\n  }\n  # Return traffic automatically allowed\n}\n\n# NACL (stateless)\nresource \"aws_network_acl_rule\" \"example\" {\n  # Must explicitly allow both directions\n  egress = false\n  from_port = 80\n  to_port = 80\n  protocol = \"tcp\"\n}",
          "language": "hcl"
        }
      },
      "tags": ["security-groups", "nacl", "security"],
      "difficulty": "medium",
      "category": "networking"
    },
    {
      "id": "aws-net-10",
      "question": "Which of the following is a valid CIDR block for a VPC?",
      "options": [
        "10.0.0.0/8",
        "10.0.0.0/16",
        "10.0.0.0/32",
        "10.0.0.0/0"
      ],
      "answer": 1,
      "image": "cloud2.jpg",
      "explanation": {
        "text": "AWS VPCs must have a CIDR block between /16 and /28. 10.0.0.0/16 is a common choice as it provides 65,536 IP addresses. /8 is too large, /32 is a single IP, and /0 represents all IP addresses.",
        "codeExample": {
          "code": "# VPC with proper CIDR range\nresource \"aws_vpc\" \"main\" {\n  cidr_block = \"10.0.0.0/16\"  # 65,536 IPs\n  # Subnet example:\n  # 10.0.1.0/24 = 256 IPs\n  # 10.0.2.0/24 = 256 IPs\n}",
          "language": "hcl"
        }
      },
      "tags": ["vpc", "cidr", "networking-basics"],
      "difficulty": "easy",
      "category": "networking"
    },
    {
      "id": "aws-net-11",
      "question": "When using an Application Load Balancer, what is the significance of cross-zone load balancing?",
      "options": [
        "It allows traffic between VPCs",
        "It distributes traffic evenly across all registered targets in all enabled Availability Zones",
        "It only works with public subnets",
        "It's required for SSL termination"
      ],
      "answer": 1,
      "image": "aws1.jpg",
      "explanation": {
        "text": "Cross-zone load balancing ensures even distribution of traffic across all registered targets, regardless of AZ. Without it, traffic is distributed evenly to each AZ first, which can lead to uneven distribution if target counts differ between AZs.",
        "codeExample": {
          "code": "# ALB with cross-zone enabled\nresource \"aws_lb\" \"example\" {\n  enable_cross_zone_load_balancing = true\n  # Even if AZ1 has 2 targets and AZ2 has 8,\n  # each target gets equal traffic\n}",
          "language": "hcl"
        }
      },
      "tags": ["alb", "high-availability", "load-balancing"],
      "difficulty": "medium",
      "category": "networking"
    },
    {
      "id": "aws-net-12",
      "question": "What happens to existing connections when you modify a security group rule?",
      "options": [
        "All existing connections are immediately terminated",
        "Changes apply only to new connections, existing connections continue until closed",
        "Connections are paused until you restart the instance",
        "You must create a new security group instead of modifying existing ones"
      ],
      "answer": 1,
      "image": "aws2.jpg",
      "explanation": {
        "text": "Security group changes take effect immediately but only apply to new connections. Existing connections continue unaffected until they're closed. This behavior helps prevent disruption to active sessions when updating security rules.",
        "codeExample": {
          "code": "# Modifying a security group\n# Existing SSH connection stays active\n# New connections use updated rules\naws_security_group_rule \"example\" {\n  type = \"ingress\"\n  from_port = 443\n  to_port = 443\n  protocol = \"tcp\"\n}",
          "language": "hcl"
        }
      },
      "tags": ["security-groups", "operations", "security"],
      "difficulty": "medium",
      "category": "networking"
    },
    {
      "id": "aws-net-13",
      "question": "Which statement about VPC Flow Logs is correct?",
      "options": [
        "They capture the contents of all network traffic",
        "They record metadata about IP traffic going to and from network interfaces",
        "They only work in public subnets",
        "They require an Internet Gateway"
      ],
      "answer": 1,
      "image": "aws3.jpg",
      "explanation": {
        "text": "VPC Flow Logs capture metadata about network traffic (IPs, ports, protocols, etc.) but not the actual content. They're useful for security analysis, troubleshooting, and compliance. They can be enabled at VPC, subnet, or network interface level.",
        "codeExample": {
          "code": "# Enable flow logs for VPC\nresource \"aws_flow_log\" \"example\" {\n  vpc_id = aws_vpc.main.id\n  traffic_type = \"ALL\"\n  log_destination_type = \"cloud-watch-logs\"\n  # Captures: timestamp, source IP, destination IP,\n  # ports, protocol, packets, bytes\n}",
          "language": "hcl"
        }
      },
      "tags": ["vpc", "monitoring", "security"],
      "difficulty": "medium",
      "category": "networking"
    },
    {
      "id": "aws-net-14",
      "question": "What is the primary purpose of adding multiple subnets in different Availability Zones?",
      "options": [
        "To increase the total number of available IP addresses",
        "To reduce network latency",
        "To provide high availability and fault tolerance",
        "To separate development and production environments"
      ],
      "answer": 2,
      "image": "cloud.jpg",
      "explanation": {
        "text": "Multiple subnets across AZs provide high availability and fault tolerance. If one AZ fails, resources in other AZs continue operating. This is a fundamental principle for building resilient architectures in AWS.",
        "codeExample": {
          "code": "# Create subnets in multiple AZs\nresource \"aws_subnet\" \"private\" {\n  count = length(var.availability_zones)\n  vpc_id = aws_vpc.main.id\n  availability_zone = var.availability_zones[count.index]\n  # If one AZ fails, others remain available\n}",
          "language": "hcl"
        }
      },
      "tags": ["vpc", "high-availability", "architecture"],
      "difficulty": "medium",
      "category": "networking"
    },
    {
      "id": "aws-net-15",
      "question": "When using Application Load Balancers, what is the correct order of components from internet to application?",
      "options": [
        "Internet → Target Group → Load Balancer → Application",
        "Internet → Load Balancer → Target Group → Application",
        "Internet → Application → Load Balancer → Target Group",
        "Internet → Target Group → Application → Load Balancer"
      ],
      "answer": 1,
      "image": "cloud2.jpg",
      "explanation": {
        "text": "Traffic flows: Internet → Load Balancer → Target Group → Application. The ALB receives traffic, uses listener rules to determine which target group to route to, then forwards to a healthy target in that group.",
        "codeExample": {
          "code": "# Traffic flow in ALB configuration\nresource \"aws_lb\" \"example\" {\n  # 1. Traffic hits ALB listener\n}\nresource \"aws_lb_listener\" \"example\" {\n  # 2. Listener rule determines target group\n}\nresource \"aws_lb_target_group\" \"example\" {\n  # 3. Target group forwards to healthy instance\n}",
          "language": "hcl"
        }
      },
      "tags": ["alb", "architecture", "load-balancing"],
      "difficulty": "easy",
      "category": "networking"
    }
  ]